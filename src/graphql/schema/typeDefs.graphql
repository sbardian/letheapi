type Item {
  id: String!
  title: String!
  creator: String!
  list: String!
}

type User {
  id: String!
  username: String!
  email: String!
  lists: [List]
  items: [Item]
}

type List {
  id: String
  title: String
  owner: String
  users: [User]
  items: [Item]
}

type AuthResponse {
  token: String!
}

type getListUsers {
  users: [User]
}

type getUserLists {
  lists: [List]
}

input LoginInput {
  username: String!
  password: String!
}

input SignupInput {
  username: String!
  email: String!
  password: String!
}

input NewList {
  title: String!
}

input NewItem {
  title: String!
  list: String!
}

type Mutation {
  login(loginInput: LoginInput!): AuthResponse
  signup(signupInput: SignupInput!): AuthResponse
  createNewItem(ItemInfo: NewItem!): Item!
  createNewList(ListInfo: NewList!): List!
}

type Query {
  getUser(userId: String): User
  getLists(userId: String!, limit: Int): [List]
}
